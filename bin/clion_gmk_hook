#!/usr/bin/python2.7

import os
from commands import getoutput as call
from os import listdir
from os.path import isfile, join

tc_dir="build/cmake_config/toolchains/"

def get_pwd():
    return os.getcwd()

def get_toolchains():
    return [f for f in listdir(tc_dir) if isfile(join(tc_dir,f))]

def get_current_proj():
    return get_pwd().split("/")[-2]

def get_current_toolchain():
    for toolchain in get_toolchains():
        if get_current_proj() in toolchain:
            return tc_dir + toolchain

def get_current_toolchain_contents():
    return open(get_current_toolchain(), 'r').read()

def get_injection_text():
    # proj setting
    injection = "set(COMPILE_" + get_current_proj().upper() + " yes)\n"

    build_root = os.path.abspath(get_pwd() + "/../projects/" + get_current_proj())
    injection += "set(BUILD_ROOT " + build_root + ")\n"

    # toolchain
    injection += get_current_toolchain_contents()

    return injection

def get_cmakelists_text():
    return open(get_pwd() + "/CMakeLists.txt", 'r').read()

def get_new_cmakelists_text():
    cmakelists = get_cmakelists_text()
    injection = get_injection_text()
    new = injection + "\n" + cmakelists
    return new

def write_new_cmakelists():
    write_text = get_new_cmakelists_text()
    open(get_pwd() + "/CMakeLists.txt", 'w').write(write_text)

def main():
    print(call("./gen-make.py"))
    write_new_cmakelists()

if __name__ == "__main__":
    main()